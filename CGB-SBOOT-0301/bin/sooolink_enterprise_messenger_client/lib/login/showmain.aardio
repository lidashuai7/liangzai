import win.ui;

namespace login;
class showmain{
	ctor(parent,tParam){
	import fonts.fontAwesome;
	import win.ui;
	import inet.http;
	import win.ui.tabs;
/*DSG{{*/
var winform = win.form(text="aardio form";right=1200;bottom=750;border="none";mode="popup")
winform.add(
app={cls="plus";text='\uF009';left=211;top=4;right=271;bottom=50;color=16777215;font=LOGFONT(h=-32;name='FontAwesome');notify=1;z=3};
bkplus={cls="bkplus";left=0;top=0;right=1200;bottom=51;bgcolor=7911519;dl=1;dr=1;dt=1;z=1};
chat={cls="plus";text='\uF086';left=139;top=4;right=199;bottom=50;color=16777215;font=LOGFONT(h=-32;name='FontAwesome');notify=1;z=2};
custom={cls="custom";left=0;top=50;right=1199;bottom=751;ah=1;aw=1;bgcolor=16119285;color=16777215;db=1;dl=1;dr=1;dt=1;font=LOGFONT(h=-16);z=4};
userface={cls="plus";left=7;top=2;right=52;bottom=47;bgcolor=16777215;border={color=-1;radius=80};dl=1;dt=1;foreRepeat="expand";foreground="\data\face\green.jpg";notify=1;z=5};
username={cls="plus";text="...";left=60;top=27;right=137;bottom=48;align="left";aw=1;color=16777215;dl=1;dt=1;font=LOGFONT(weight=700);iconColor=16119285;z=6}
)
/*}}*/




winform.app.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)


    import win.ui.simpleWindow;
	win.ui.simpleWindow( winform );
	
	//用户头像
	var userInfo = global.userInfo;
	//..console.log(userInfo.face);
	//更新头像
	if(userInfo.face!=null || userInfo.face!=""){
		//..console.log(123);
		winform.userface.foreground = inet.http().get(userInfo.face);
	}
	
	if(userInfo.real_name!=null and userInfo.real_name!=""){
		winform.username.text = userInfo.real_name;
	}else {
		if(userInfo.nick_name!=null and userInfo.nick_name!=""){
			winform.username.text = userInfo.nick_name;
		}else {
			winform.username.text = userInfo.name;
		}
		
	}
	//..console.log("用户头像资料渲染结束-----------------");
	//用户头像，名称更新结束
	//..console.log('2:');
	//..console.dumpTable(winform.userface.foreground);
	
	
	var tbs = win.ui.tabs( 
			winform.chat,
			winform.app
		);
	tbs.skin({
		foreground={
			active=0xFFFFFFFF;
			default=0x00FFFFFF;
			hover=0x38FFFFFF
		};
		color={
			default=0xFFFFFFFF; 
		};
		checked={
			foreground={default=0xFFFFFFFF;};
			color={default=0xFF42A875;}
		}
	});
	

	tbs.loadForm(1,"\dlg\chat.aardio" );
	tbs.loadForm(2,"\dlg\app.aardio" );

	winform.userface.skin({
		border = { 
			hover = {color=0xFFFFFFFF;radius=80;width=0} 
		}; 
	});
	
	winform.username.color = 0xFFD9D9D9;
	winform.userface.onMouseLeave = function(wParam,lParam){
		winform.username.color = 0xFFD9D9D9;
	}
	winform.userface.onMouseEnter = function(wParam,lParam){
		winform.username.color = 0xFFFFFFFF;
	}
	//修改自己的信息
	winform.userface.oncommand = function(id,event){
		winform.loadForm("\dlg\owninfo.aardio");
	}
	
	tbs.selIndex = 1;
	//最小化到任务栏代码并生成闪动效果
	import win.util.tray;
	import console;
	trayObj = win.util.tray(winform);
	trayShanObj = null;
	winform.onMinimize = function(lParam){
		//trayObj = win.util.tray(winform)  
		winform.modifyStyleEx(0x40000/*_WS_EX_APPWINDOW*/,0x80/*_WS_EX_TOOLWINDOW*/)
		winform.show(false); 
		global.winStatus = 'hide';
		return true; 
	}
	//窗口关闭的时候一并删除任务栏对象
	winform.onDestroy = function(){
		if(trayObj){
			trayObj.delete()
		}
		//全部退出程序
		win.quitMessage();
	}
	
	hIcon = win.image.loadIconFromFile("/res/ico/messenger_72px_26597_easyicon.net.ico",true);
	
	..subscribe("托盘跳动消息",function(...){
		if(trayShanObj==null){
			trayShanObj = winform.reduce( { hIcon;},
				function(value,index){
					trayObj.icon = value;
					return 500;
			});
		};
		
	});
	
	import win.ui.menu;
	//任务栏右键菜单
	winform.wndproc = {
		[0xACCF/*_WM_TRAYMESSAGE*/ ] = function(hwnd,message,wParam,lParam){
			if( lParam = 0x205/*_WM_RBUTTONUP*/ ){
				win.setForeground(winform.hwnd)
				winform.popmenu = win.ui.popmenu(winform);//创建弹出菜单
				winform.popmenu.add('聊天',function(id){
					tbs.selIndex = 1;
					winform.show();
					winform.clearInterval(trayShanObj);
					trayShanObj = null;
					trayObj.icon = hIcon;
					global.winStatus = 'show';
				});
				winform.popmenu.add('应用',function(id){
					tbs.selIndex = 2;
					winform.show();
					winform.clearInterval(trayShanObj);
					trayShanObj = null;
					trayObj.icon = hIcon;
					global.winStatus = 'show';
				});
				winform.popmenu.add('退出',function(id){ 
						winform.close() 
					})
				
				
				var pt = ::POINT();
				::User32.GetCursorPos(pt);
				winform.popmenu.popup(pt.x,pt.y,true)
			}
			elseif( lParam = 0x202/*_WM_LBUTTONUP*/ ) {
				winform.show();
				win.setForeground(winform.hwnd);
				winform.clearInterval(trayShanObj);
				trayShanObj = null;
				trayObj.icon = hIcon;
				//if(tbs.selIndex = 2){
				//	tbs.selForm.editSearch.editBox.setFocus();
				//}
				global.winStatus = 'show';
			} 	
		}
	}   
	winform.tabs = tbs;    
	winform.show();
	};
}

if( !owner ) {
	..login.showmain().doModal()

}
/**intellisense()
login.showmain() = 窗口类\n!winform.
end intellisense**/